#집합 #니가배운 그 수학 집합 맞음 #set

#집합 만드는법
'''
s1 = set([1, 2, 3]) # list를 set함수로 감싼 형태
print(s1) # {1, 2, 3} 

s2 = {4, 5, 6}
print(s2) # {4, 5, 6}

s3 = set("Hello")
print(s3)
# {'e', 'H', 'l', 'o'} 4개가 랜덤으로 나온다! 집합이기에 중복 원소 X
# 집합은 순서개념도 딱히 없으므로 인덱스, 슬라이싱도 없다

# + 집합 자료형에 저장된 값을 인덱싱, 슬라이싱으로 접근하고싶으면 리스트나 튜플로 변환
l1 = list(s1)
print(l1[0]) # 1

t1 = tuple(s1)
print(t1[0]) # 1
'''

#집합 활용법
'''
s1 = set([1, 2, 3, 4, 5, 6])
s2 = set([4, 5, 6, 7, 8, 9])

#교집합 구하기
print(s1 & s2) # {4, 5, 6}
print(s1.intersection(s2)) # {4, 5, 6}

#합집합 구하기
print(s1 | s2) # {1, 2, 3, 4, 5, 6, 7, 8, 9}
print(s1.union(s2)) # {1, 2, 3, 4, 5, 6, 7, 8, 9}

#차집합 구하기
print(s1 - s2) # {1, 2, 3}
print(s1.difference(s2)) # {1, 2, 3}
print(s2 - s1) # {8, 9, 7}
print(s2.difference(s1)) # {8, 9, 7}
'''

#집합 자료형 관련 함수
'''
s1 = set([1, 2, 3])
s2 = set([4, 5, 6])

#값 1개 추가하기 - add
s1.add(4)
print(s1) # {1, 2, 3, 4}

#값 여러 개 추가하기 - update
s1.update([4, 5, 6])
print(s1) # {1, 2, 3, 4, 5, 6}

#특정 값 제거하기 - remove
s2.remove(4)
print(s2) # {5, 6}
'''

#집합 활용하는법
l1 = [1, 2, 2, 2, 2, 3, 3, 3]
l2 = list(set(l1))
print(l2) #[1, 2, 3] 중복 제거